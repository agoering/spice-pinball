#include <Pinball.h>

int clkpin = 8;      // Clock pin
int latchpin = 9;    // Latch pin
int datapin = 10;     // Data pin

int s_clkpin = 12;      // Clock pin
int s_latchpin = 13;    // Latch pin
int s_datapin = 11;     // Data pin
int numreg = 2;       // Number of shift registers in series

Pb_outputs shregs(s_datapin, s_clkpin, s_latchpin, numreg);

byte serdata[2];


int lights_off = 100;
int values0[10] = {0, 0+lights_off, 0, 0+lights_off, 0, 0+lights_off, 0, 0+lights_off, 0, 0+lights_off};
int values1[10] = {1, 1+lights_off, 1, 1+lights_off, 0, 1+lights_off, 0, 1+lights_off, 0, 1+lights_off};
int values2[10] = {2, 2+lights_off, 2, 2+lights_off, 0, 2+lights_off, 0, 2+lights_off, 0, 2+lights_off};
int values3[10] = {3, 3+lights_off, 3, 3+lights_off, 0, 3+lights_off, 0, 3+lights_off, 0, 3+lights_off};
int values4[10] = {4, 4+lights_off, 4, 4+lights_off, 0, 4+lights_off, 0, 4+lights_off, 0, 4+lights_off};
int values5[10] = {5, 5+lights_off, 5, 5+lights_off, 0, 5+lights_off, 0, 5+lights_off, 0, 5+lights_off};
int timing[10] = {250, 250, 250, 250, 250, 250, 250, 250, 250, 250};

//bitWrite(serdata[2],5,1)
//bitWrite(serdata[2],5,0)

// Declare object named disp 
Pb_display disp(datapin, clkpin, latchpin);

Pb_muxin mysws(2, 3, 4, 7); // (pinA, pinB, pinC, COMpin)

int compin = 7;

int ledpin = 6;

Pb_switch myswitch0(50);    // specify debounce time ( 200 ms )
Pb_switch myswitch1(50);    // specify debounce time ( 200 ms )
Pb_switch myswitch2(50);    // specify debounce time ( 200 ms )
Pb_switch myswitch3(50);    // specify debounce time ( 200 ms )
Pb_switch myswitch4(50);    // specify debounce time ( 200 ms )
Pb_switch myswitch5(50);    // specify debounce time ( 200 ms )
Pb_switch myswitch6(50);    // specify debounce time ( 200 ms )

Pb_timedevent dothis(flash_light);

int IRflag0 = 0;
int IRflag1 = 0;
int IRflag2 = 0;
int IRflag3 = 0;
int IRflag4 = 0;
int IRflag5 = 0;
int IRflag6 = 0;

int score = 0;
int lives = 6;

void setup() {

serdata[0] = 0b00000000;
serdata[1] = 0b00000000;
  
  pinMode(ledpin, OUTPUT);
  digitalWrite(ledpin, 0);
  // Write a 0 to the display.
  disp.print_number(score);
  shregs.update(serdata);
   lives_update();
  delay(1000);
}


void loop() {

 dothis.update();
 

 checkIRstuff();
 dooutputs();  
}

void checkIRstuff() {
 
 mysws.probe(0);
 digitalWrite(compin, 0);
 delay(1);
 if ( myswitch0.pushed( digitalRead(compin) ) ) {
   IRflag0 = 1;
 } 
 digitalWrite(compin, 1);
 
 mysws.probe(1);
 digitalWrite(compin, 0);
 delay(1);
 if ( myswitch1.pushed( digitalRead(compin) ) ) {
   IRflag1 = 1;
 } 
 digitalWrite(compin, 1); 
 
 mysws.probe(2);
 digitalWrite(compin, 0);
 delay(1);
 if ( myswitch2.pushed( digitalRead(compin) ) ) {
   IRflag2 = 1;
 } 
 digitalWrite(compin, 1);

 mysws.probe(3);
 digitalWrite(compin, 0);
 delay(1);
 if ( myswitch3.pushed( digitalRead(compin) ) ) {
   IRflag3 = 1;
 } 
 digitalWrite(compin, 1);

 mysws.probe(4);
 digitalWrite(compin, 0);
 delay(1);
 if ( myswitch4.pushed( digitalRead(compin) ) ) {
   IRflag4 = 1;
 } 
 digitalWrite(compin, 1); 
 
 mysws.probe(5);
 digitalWrite(compin, 0);
 delay(1);
 if ( myswitch5.pushed( digitalRead(compin) ) ) {
   IRflag5 = 1;
 } 
 digitalWrite(compin, 1);
 
 mysws.probe(6);
 digitalWrite(compin, 0);
 delay(1);
 if ( myswitch6.pushed( digitalRead(compin) ) ) {
   IRflag6 = 1;
 } 
 digitalWrite(compin, 1); 
 
}

void dooutputs() {
 
 if (IRflag0 == 1) {
   IRflag0 = 0;
   dothis.start(values0, timing, 10); 
   score = score - 2;
   disp.print_number(score);
 }
 if (IRflag1 == 1) {
   IRflag1 = 0;
   dothis.start(values1, timing, 10); 
   score = score + 1;
   disp.print_number(score);
 } 
 if (IRflag2 == 1) {
   IRflag2 = 0;
   dothis.start(values2, timing, 10); 
   score = score + 1;
   disp.print_number(score);
 }
 if (IRflag3 == 1) {
   IRflag3 = 0;
   dothis.start(values3, timing, 10); 
   score = score + 1;
   disp.print_number(score);
 } 
 if (IRflag4 == 1) {
   IRflag4 = 0;
   dothis.start(values4, timing, 10); 
   score = score + 1;
   disp.print_number(score);
 } 
 if (IRflag5 == 1) {
   IRflag5 = 0;
   dothis.start(values5, timing, 10); 
   score = score + 2;
   disp.print_number(score);
 } 
 if (IRflag6 == 1) {
   lives = lives - 1;
   IRflag6 = 0;
   lives_update();
   //score = score - 1;
   disp.print_number(score);
 }  
 shregs.update(serdata);
  
}

void flash_light( int light ){
  if( light == 0 ){
    bitWrite(serdata[1], 0, 1);
  } else if( light == 1 ){
    bitWrite(serdata[1], 1, 1);
  } else if(light == 2) {
    bitWrite(serdata[1], 2, 1);
  } else if( light == 3 ){
    bitWrite(serdata[1], 3, 1);
  } else if( light == 4 ){
    bitWrite(serdata[1], 4, 1);
  } else if( light == 5 ){
    bitWrite(serdata[1], 5, 1);
  } else if( light == 0 + lights_off ){
    bitWrite(serdata[1], 0, 0);
  } else if( light == 1 + lights_off ){
    bitWrite(serdata[1], 1, 0);
  } else if(light == 2 + lights_off) {
    bitWrite(serdata[1], 2, 0);
  } else if( light == 3 + lights_off ){
    bitWrite(serdata[1], 3, 0);
  } else if( light == 4 + lights_off ){
    bitWrite(serdata[1], 4, 0);
  } else if( light == 5 + lights_off ){
    bitWrite(serdata[1], 5, 0);
  }
}

void lives_update(){
  if( lives == 0 ){
    bitWrite(serdata[1],6,0);
    bitWrite(serdata[1],7,0);
    serdata[0] = 0b00000000;
  } else if ( lives == 1 ){
    bitWrite(serdata[1],6,0);
    bitWrite(serdata[1],7,0);
    serdata[0] = 0b11000000;
  } else if ( lives == 2 ){
    bitWrite(serdata[1],6,0);
    bitWrite(serdata[1],7,0);
    serdata[0] = 0b11110000; 
  } else if ( lives == 3 ){    
    bitWrite(serdata[1],6,0);
    bitWrite(serdata[1],7,0);
    serdata[0] = 0b11111100; 
  } else if ( lives == 4 ){
    bitWrite(serdata[1],6,0);
    bitWrite(serdata[1],7,0);
    serdata[0] = 0b11111111; 
  } else if ( lives == 5 ){
    bitWrite(serdata[1],6,1);
    bitWrite(serdata[1],7,1);
    serdata[0] = 0b11111111; 
  }
}


